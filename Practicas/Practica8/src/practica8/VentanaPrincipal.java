/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica8;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Image;
import java.awt.Point;
import java.awt.Stroke;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseMotionAdapter;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author carlo
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        this.setSize(1280, 720);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoBotonesHerramientas = new javax.swing.ButtonGroup();
        ventanaTamanio = new javax.swing.JDialog();
        alto = new javax.swing.JSpinner();
        ancho = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        botonCancelar = new javax.swing.JButton();
        botonRecortar = new javax.swing.JButton();
        botonRedimensionar = new javax.swing.JButton();
        escritorio = new javax.swing.JDesktopPane();
        panelHerramientas = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        botonNuevo = new javax.swing.JButton();
        botonAbrir = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        barraFormas = new javax.swing.JToolBar();
        botonPunto = new javax.swing.JToggleButton();
        botonLinea = new javax.swing.JToggleButton();
        botonRectangulo = new javax.swing.JToggleButton();
        botonElipse = new javax.swing.JToggleButton();
        botonSeleccionar = new javax.swing.JToggleButton();
        barraAtributos = new javax.swing.JToolBar();
        Color colores[] ={Color.BLACK, Color.RED, Color.BLUE, Color.GREEN, Color.YELLOW, Color.WHITE};
        botonDesplegableColores = new javax.swing.JComboBox<>(colores);
        botonGrosor = new javax.swing.JSpinner();
        botonRelleno = new javax.swing.JToggleButton();
        botonTransparencia = new javax.swing.JToggleButton();
        botonAlisar = new javax.swing.JToggleButton();
        botonRecorte = new javax.swing.JToggleButton();
        botonVolcado = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        barraCoordenadas = new javax.swing.JLabel();
        barraEstado = new javax.swing.JLabel();
        Menu = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        menuNuevo = new javax.swing.JMenuItem();
        menuAbrir = new javax.swing.JMenuItem();
        menuGuardar = new javax.swing.JMenuItem();
        menuEdicion = new javax.swing.JMenu();
        menuBarraEstado = new javax.swing.JCheckBoxMenuItem();
        menuBarraFormas = new javax.swing.JCheckBoxMenuItem();
        menuBarraAtributos = new javax.swing.JCheckBoxMenuItem();
        menuTamanio = new javax.swing.JMenuItem();

        FormListener formListener = new FormListener();

        ventanaTamanio.setSize(new java.awt.Dimension(400, 400));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Ancho");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Alto");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(formListener);
        jPanel2.add(botonCancelar);

        botonRecortar.setText("Recortar");
        botonRecortar.addActionListener(formListener);
        jPanel2.add(botonRecortar);

        botonRedimensionar.setText("Redimensionar");
        botonRedimensionar.addActionListener(formListener);
        jPanel2.add(botonRedimensionar);

        javax.swing.GroupLayout ventanaTamanioLayout = new javax.swing.GroupLayout(ventanaTamanio.getContentPane());
        ventanaTamanio.getContentPane().setLayout(ventanaTamanioLayout);
        ventanaTamanioLayout.setHorizontalGroup(
            ventanaTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventanaTamanioLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(ventanaTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(77, 77, 77)
                .addGroup(ventanaTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ancho, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alto, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        ventanaTamanioLayout.setVerticalGroup(
            ventanaTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventanaTamanioLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(ventanaTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ancho, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(ventanaTamanioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(alto, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(formListener);

        escritorio.addMouseMotionListener(formListener);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1550, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
        );

        getContentPane().add(escritorio, java.awt.BorderLayout.CENTER);

        panelHerramientas.setLayout(new javax.swing.BoxLayout(panelHerramientas, javax.swing.BoxLayout.LINE_AXIS));

        jToolBar1.setRollover(true);
        jToolBar1.setPreferredSize(new java.awt.Dimension(150, 32));

        botonNuevo.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\nuevo.png")); // NOI18N
        botonNuevo.setToolTipText("Nuevo");
        botonNuevo.setFocusable(false);
        botonNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonNuevo.addActionListener(formListener);
        jToolBar1.add(botonNuevo);

        botonAbrir.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\abrir.png")); // NOI18N
        botonAbrir.setToolTipText("Abrir");
        botonAbrir.setFocusable(false);
        botonAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonAbrir.addActionListener(formListener);
        jToolBar1.add(botonAbrir);

        botonGuardar.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\guardar.png")); // NOI18N
        botonGuardar.setToolTipText("Guardar");
        botonGuardar.setFocusable(false);
        botonGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonGuardar.addActionListener(formListener);
        jToolBar1.add(botonGuardar);

        panelHerramientas.add(jToolBar1);

        barraFormas.setRollover(true);
        barraFormas.setPreferredSize(new java.awt.Dimension(200, 32));

        GrupoBotonesHerramientas.add(botonPunto);
        botonPunto.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\punto.png")); // NOI18N
        botonPunto.setToolTipText("Punto");
        botonPunto.setFocusable(false);
        botonPunto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonPunto.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonPunto.addActionListener(formListener);
        barraFormas.add(botonPunto);

        GrupoBotonesHerramientas.add(botonLinea);
        botonLinea.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\linea.png")); // NOI18N
        botonLinea.setToolTipText("Linea");
        botonLinea.setFocusable(false);
        botonLinea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonLinea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonLinea.addActionListener(formListener);
        barraFormas.add(botonLinea);

        GrupoBotonesHerramientas.add(botonRectangulo);
        botonRectangulo.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\rectangulo.png")); // NOI18N
        botonRectangulo.setToolTipText("Rectangulo");
        botonRectangulo.setFocusable(false);
        botonRectangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonRectangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonRectangulo.addActionListener(formListener);
        barraFormas.add(botonRectangulo);

        GrupoBotonesHerramientas.add(botonElipse);
        botonElipse.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\elipse.png")); // NOI18N
        botonElipse.setToolTipText("Elipse");
        botonElipse.setFocusable(false);
        botonElipse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonElipse.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonElipse.addActionListener(formListener);
        barraFormas.add(botonElipse);

        GrupoBotonesHerramientas.add(botonSeleccionar);
        botonSeleccionar.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\seleccion.png")); // NOI18N
        botonSeleccionar.setToolTipText("Seleccionar");
        botonSeleccionar.setFocusable(false);
        botonSeleccionar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonSeleccionar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonSeleccionar.addActionListener(formListener);
        barraFormas.add(botonSeleccionar);

        panelHerramientas.add(barraFormas);

        barraAtributos.setRollover(true);
        barraAtributos.setPreferredSize(new java.awt.Dimension(250, 32));

        botonDesplegableColores.setToolTipText("Colores");
        botonDesplegableColores.setRenderer(new ColorCellRender());
        botonDesplegableColores.addActionListener(formListener);
        barraAtributos.add(botonDesplegableColores);

        botonGrosor.setModel(new javax.swing.SpinnerNumberModel(3, 1, null, 1));
        botonGrosor.setToolTipText("Grosor");
        botonGrosor.setPreferredSize(new java.awt.Dimension(60, 26));
        botonGrosor.addChangeListener(formListener);
        barraAtributos.add(botonGrosor);

        botonRelleno.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\rellenar.png")); // NOI18N
        botonRelleno.setToolTipText("Relleno");
        botonRelleno.setFocusable(false);
        botonRelleno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonRelleno.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonRelleno.addActionListener(formListener);
        barraAtributos.add(botonRelleno);

        botonTransparencia.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\transparencia.png")); // NOI18N
        botonTransparencia.setToolTipText("Transparencia");
        botonTransparencia.setFocusable(false);
        botonTransparencia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonTransparencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonTransparencia.addActionListener(formListener);
        barraAtributos.add(botonTransparencia);

        botonAlisar.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica7\\images\\alisar.png")); // NOI18N
        botonAlisar.setToolTipText("Alisado");
        botonAlisar.setFocusable(false);
        botonAlisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonAlisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonAlisar.addActionListener(formListener);
        barraAtributos.add(botonAlisar);

        botonRecorte.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica8\\images\\recortar.png")); // NOI18N
        botonRecorte.setToolTipText("Efecto Ventana");
        botonRecorte.setFocusable(false);
        botonRecorte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonRecorte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonRecorte.addActionListener(formListener);
        barraAtributos.add(botonRecorte);

        botonVolcado.setIcon(new javax.swing.ImageIcon("C:\\Users\\carlo\\Documents\\NetBeansProjects\\Practica8\\images\\volcado.png")); // NOI18N
        botonVolcado.setToolTipText("Volcado");
        botonVolcado.setFocusable(false);
        botonVolcado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonVolcado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonVolcado.addActionListener(formListener);
        barraAtributos.add(botonVolcado);

        panelHerramientas.add(barraAtributos);

        getContentPane().add(panelHerramientas, java.awt.BorderLayout.PAGE_START);

        jPanel1.setPreferredSize(new java.awt.Dimension(1550, 25));
        jPanel1.setLayout(new java.awt.BorderLayout());

        barraCoordenadas.setText("Coordenadas");
        jPanel1.add(barraCoordenadas, java.awt.BorderLayout.EAST);

        barraEstado.setText("Barra de Estado");
        jPanel1.add(barraEstado, java.awt.BorderLayout.LINE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        menuArchivo.setText("Archivo");

        menuNuevo.setText("Nuevo");
        menuNuevo.addActionListener(formListener);
        menuArchivo.add(menuNuevo);

        menuAbrir.setText("Abrir");
        menuAbrir.addActionListener(formListener);
        menuArchivo.add(menuAbrir);

        menuGuardar.setText("Guardar");
        menuGuardar.addActionListener(formListener);
        menuArchivo.add(menuGuardar);

        Menu.add(menuArchivo);

        menuEdicion.setText("Edicion");

        menuBarraEstado.setSelected(true);
        menuBarraEstado.setText("Ver barra de estado");
        menuBarraEstado.addActionListener(formListener);
        menuEdicion.add(menuBarraEstado);

        menuBarraFormas.setSelected(true);
        menuBarraFormas.setText("Ver barra de formas");
        menuBarraFormas.addActionListener(formListener);
        menuEdicion.add(menuBarraFormas);

        menuBarraAtributos.setSelected(true);
        menuBarraAtributos.setText("Ver barra de atributos");
        menuBarraAtributos.addActionListener(formListener);
        menuEdicion.add(menuBarraAtributos);

        menuTamanio.setText("Cambiar Tamaño");
        menuTamanio.addActionListener(formListener);
        menuEdicion.add(menuTamanio);

        Menu.add(menuEdicion);

        setJMenuBar(Menu);

        pack();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.MouseMotionListener, javax.swing.event.ChangeListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == botonNuevo) {
                VentanaPrincipal.this.botonNuevoActionPerformed(evt);
            }
            else if (evt.getSource() == botonAbrir) {
                VentanaPrincipal.this.botonAbrirActionPerformed(evt);
            }
            else if (evt.getSource() == botonGuardar) {
                VentanaPrincipal.this.botonGuardarActionPerformed(evt);
            }
            else if (evt.getSource() == botonPunto) {
                VentanaPrincipal.this.botonPuntoActionPerformed(evt);
            }
            else if (evt.getSource() == botonLinea) {
                VentanaPrincipal.this.botonLineaActionPerformed(evt);
            }
            else if (evt.getSource() == botonRectangulo) {
                VentanaPrincipal.this.botonRectanguloActionPerformed(evt);
            }
            else if (evt.getSource() == botonElipse) {
                VentanaPrincipal.this.botonElipseActionPerformed(evt);
            }
            else if (evt.getSource() == botonSeleccionar) {
                VentanaPrincipal.this.botonSeleccionarActionPerformed(evt);
            }
            else if (evt.getSource() == botonDesplegableColores) {
                VentanaPrincipal.this.botonDesplegableColoresActionPerformed(evt);
            }
            else if (evt.getSource() == botonRelleno) {
                VentanaPrincipal.this.botonRellenoActionPerformed(evt);
            }
            else if (evt.getSource() == botonTransparencia) {
                VentanaPrincipal.this.botonTransparenciaActionPerformed(evt);
            }
            else if (evt.getSource() == botonAlisar) {
                VentanaPrincipal.this.botonAlisarActionPerformed(evt);
            }
            else if (evt.getSource() == botonRecorte) {
                VentanaPrincipal.this.botonRecorteActionPerformed(evt);
            }
            else if (evt.getSource() == botonVolcado) {
                VentanaPrincipal.this.botonVolcadoActionPerformed(evt);
            }
            else if (evt.getSource() == menuNuevo) {
                VentanaPrincipal.this.menuNuevoActionPerformed(evt);
            }
            else if (evt.getSource() == menuAbrir) {
                VentanaPrincipal.this.menuAbrirActionPerformed(evt);
            }
            else if (evt.getSource() == menuGuardar) {
                VentanaPrincipal.this.menuGuardarActionPerformed(evt);
            }
            else if (evt.getSource() == menuBarraEstado) {
                VentanaPrincipal.this.menuBarraEstadoActionPerformed(evt);
            }
            else if (evt.getSource() == menuBarraFormas) {
                VentanaPrincipal.this.menuBarraFormasActionPerformed(evt);
            }
            else if (evt.getSource() == menuBarraAtributos) {
                VentanaPrincipal.this.menuBarraAtributosActionPerformed(evt);
            }
            else if (evt.getSource() == menuTamanio) {
                VentanaPrincipal.this.menuTamanioActionPerformed(evt);
            }
            else if (evt.getSource() == botonCancelar) {
                VentanaPrincipal.this.botonCancelarActionPerformed(evt);
            }
            else if (evt.getSource() == botonRedimensionar) {
                VentanaPrincipal.this.botonRedimensionarActionPerformed(evt);
            }
            else if (evt.getSource() == botonRecortar) {
                VentanaPrincipal.this.botonRecortarActionPerformed(evt);
            }
        }

        public void mouseDragged(java.awt.event.MouseEvent evt) {
        }

        public void mouseMoved(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == VentanaPrincipal.this) {
                VentanaPrincipal.this.formMouseMoved(evt);
            }
            else if (evt.getSource() == escritorio) {
                VentanaPrincipal.this.escritorioMouseMoved(evt);
            }
        }

        public void stateChanged(javax.swing.event.ChangeEvent evt) {
            if (evt.getSource() == botonGrosor) {
                VentanaPrincipal.this.botonGrosorStateChanged(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void botonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoActionPerformed
        VentanaInterna vi = new VentanaInterna();
        escritorio.add(vi);
        vi.setVisible(true);
        BufferedImage img;
        img = new BufferedImage(300, 300, BufferedImage.TYPE_INT_RGB);
        vi.getLienzo2D().addMouseMotionListener(new ManejadorRaton());
        vi.getLienzo2D().setImage(img);
        img.getGraphics().setColor(Color.WHITE);
        img.getGraphics().fillRect(img.getMinX(), img.getMinY(), img.getWidth(), img.getHeight());
        this.InicializarVentana(vi);
        //2) Crear el objeto manejador (hacer el "new" de la clase anterior)
        //3) Enlazar el generador con el manejador
        vi.addInternalFrameListener(new ManejadorVentanaInterna());
    }//GEN-LAST:event_botonNuevoActionPerformed

    private void botonPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPuntoActionPerformed
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setHerramienta("punto");
        }
        barraEstado.setText("Punto");
    }//GEN-LAST:event_botonPuntoActionPerformed

    private void botonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLineaActionPerformed
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setHerramienta("linea");
        }
        barraEstado.setText("Linea");
    }//GEN-LAST:event_botonLineaActionPerformed

    private void botonRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRectanguloActionPerformed
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setHerramienta("rectangulo");
        }
        barraEstado.setText("Rectangulo");
    }//GEN-LAST:event_botonRectanguloActionPerformed

    private void botonElipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonElipseActionPerformed
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setHerramienta("elipse");
        }
        barraEstado.setText("Elipse");
    }//GEN-LAST:event_botonElipseActionPerformed

    private void botonRellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRellenoActionPerformed
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setRelleno(!vi.getLienzo2D().isRelleno());
            vi.getLienzo2D().repaint();
        }
    }//GEN-LAST:event_botonRellenoActionPerformed

    private void botonSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSeleccionarActionPerformed
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setHerramienta("seleccionar");
            barraEstado.setText("Seleccionar");
        }
    }//GEN-LAST:event_botonSeleccionarActionPerformed

    private void botonDesplegableColoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDesplegableColoresActionPerformed
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setColor((Color) botonDesplegableColores.getSelectedItem());
            vi.getLienzo2D().repaint();
        }
    }//GEN-LAST:event_botonDesplegableColoresActionPerformed

    private void botonGrosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_botonGrosorStateChanged
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setTrazo((int) botonGrosor.getValue());
            vi.getLienzo2D().repaint();
        }
    }//GEN-LAST:event_botonGrosorStateChanged

    private void botonAlisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAlisarActionPerformed
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setAlisar(!vi.getLienzo2D().isAlisar());
            vi.getLienzo2D().repaint();
        }
    }//GEN-LAST:event_botonAlisarActionPerformed

    private void botonTransparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTransparenciaActionPerformed
         VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setTransparencia(!vi.getLienzo2D().isTransparencia());
            vi.getLienzo2D().repaint();
        }
    }//GEN-LAST:event_botonTransparenciaActionPerformed


    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
        JFileChooser dlg = new JFileChooser();
        dlg.setFileFilter(new FileNameExtensionFilter("Imagenes(jpg, jpeg, bmp, gif, png, wbmp,)", "jpg", "bmp", "gif", "png", "wbmp", "jpeg"));
        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {

                File f = dlg.getSelectedFile();
                if (f.getName().lastIndexOf(".") != -1) {
                    String extension = f.getName().substring(f.getName().lastIndexOf(".") + 1);
                    if (extension.equals("jpg") || extension.equals("jpeg") || extension.equals("bmp") || extension.equals("gif") || extension.equals("png") || extension.equals("wbmp")) {

                        BufferedImage img = ImageIO.read(f);
                        VentanaInterna vi = new VentanaInterna();

                        vi.getLienzo2D().setImage(img);
                        vi.getLienzo2D().addMouseMotionListener(new ManejadorRaton());
                        this.InicializarVentana(vi);
                        this.escritorio.add(vi);
                        vi.setTitle(f.getName());
                        vi.setVisible(true);

                    } else {
                        JOptionPane.showMessageDialog(dlg, "Error al abrir archivo: Formato Incompatible.", "Error de lectura", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(dlg, "Error al abrir archivo: Formato Desconocido.", "Error de lectura", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception ex) {
                System.err.println("Error al leer la imagen");
            }
        }

    }//GEN-LAST:event_menuAbrirActionPerformed

    private void menuNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNuevoActionPerformed
        VentanaInterna vi = new VentanaInterna();
        escritorio.add(vi);
        vi.setVisible(true);
        BufferedImage img;
        img = new BufferedImage(300, 300, BufferedImage.TYPE_INT_RGB);
        vi.getLienzo2D().setImage(img);
        vi.getLienzo2D().addMouseMotionListener(new ManejadorRaton());
        img.getGraphics().setColor(Color.WHITE);
        img.getGraphics().fillRect(img.getMinX(), img.getMinY(), img.getWidth(), img.getHeight());
        this.InicializarVentana(vi);
        //2) Crear el objeto manejador (hacer el "new" de la clase anterior)
        //3) Enlazar el generador con el manejador
        vi.addInternalFrameListener(new ManejadorVentanaInterna());
    }//GEN-LAST:event_menuNuevoActionPerformed

    private void menuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGuardarActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            BufferedImage img = vi.getLienzo2D().getImage(true);
            if (img != null) {
                JFileChooser dlg = new JFileChooser();
                dlg.setFileFilter(new FileNameExtensionFilter("Imagenes(jpg, jpeg, bmp, gif, png, wbmp,)", "jpg", "bmp", "gif", "png", "wbmp", "jpeg"));
                int resp = dlg.showSaveDialog(this);
                if (resp == JFileChooser.APPROVE_OPTION) {
                    try {
                        File f = dlg.getSelectedFile();

                        String extension;
                        if (f.getName().lastIndexOf(".") != -1) {
                            extension = f.getName().substring(f.getName().lastIndexOf(".") + 1);
                            if (!(extension.equals("jpg") || extension.equals("jpeg") || extension.equals("bmp") || extension.equals("gif") || extension.equals("png") || extension.equals("wbmp"))) {
                                JOptionPane.showMessageDialog(dlg, "Error al guardar archivo: Formato Incompatible.", "Error de Guardado", JOptionPane.ERROR_MESSAGE);
                            } else {
                                vi.setTitle(f.getName());
                            }
                        } else {
                            extension = "jpg";
                            vi.setTitle(f.getName());
                        }

                        ImageIO.write(img, extension, f);

                    } catch (Exception ex) {

                        System.err.println("Error al guardar la imagen");
                        JOptionPane.showMessageDialog(dlg, "Error al guardar archivo.", "Error de Guardado", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_menuGuardarActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            BufferedImage img = vi.getLienzo2D().getImage(true);
            if (img != null) {
                JFileChooser dlg = new JFileChooser();
                dlg.setFileFilter(new FileNameExtensionFilter("Imagenes(jpg, jpeg, bmp, gif, png, wbmp,)", "jpg", "bmp", "gif", "png", "wbmp", "jpeg"));
                int resp = dlg.showSaveDialog(this);
                if (resp == JFileChooser.APPROVE_OPTION) {
                    try {
                        File f = dlg.getSelectedFile();

                        String extension;
                        if (f.getName().lastIndexOf(".") != -1) {
                            extension = f.getName().substring(f.getName().lastIndexOf(".") + 1);
                            if (!(extension.equals("jpg") || extension.equals("jpeg") || extension.equals("bmp") || extension.equals("gif") || extension.equals("png") || extension.equals("wbmp"))) {
                                JOptionPane.showMessageDialog(dlg, "Error al guardar archivo: Formato Incompatible.", "Error de Guardado", JOptionPane.ERROR_MESSAGE);
                            } else {
                                vi.setTitle(f.getName());
                            }
                        } else {
                            extension = "jpg";
                            vi.setTitle(f.getName());
                        }

                        ImageIO.write(img, extension, f);

                    } catch (Exception ex) {

                        System.err.println("Error al guardar la imagen");
                        JOptionPane.showMessageDialog(dlg, "Error al guardar archivo.", "Error de Guardado", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void botonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbrirActionPerformed
        JFileChooser dlg = new JFileChooser();
        dlg.setFileFilter(new FileNameExtensionFilter("Imagenes(jpg, jpeg, bmp, gif, png, wbmp,)", "jpg", "bmp", "gif", "png", "wbmp", "jpeg"));
        int resp = dlg.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {

                File f = dlg.getSelectedFile();
                if (f.getName().lastIndexOf(".") != -1) {
                    String extension = f.getName().substring(f.getName().lastIndexOf(".") + 1);
                    if (extension.equals("jpg") || extension.equals("jpeg") || extension.equals("bmp") || extension.equals("gif") || extension.equals("png") || extension.equals("wbmp")) {

                        BufferedImage img = ImageIO.read(f);
                        VentanaInterna vi = new VentanaInterna();

                        vi.getLienzo2D().setImage(img);
                        vi.getLienzo2D().addMouseMotionListener(new ManejadorRaton());
                        this.InicializarVentana(vi);
                        this.escritorio.add(vi);
                        vi.setTitle(f.getName());
                        vi.setVisible(true);

                    } else {
                        JOptionPane.showMessageDialog(dlg, "Error al abrir archivo: Formato Incompatible.", "Error de lectura", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(dlg, "Error al abrir archivo: Formato Desconocido.", "Error de lectura", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception ex) {
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_botonAbrirActionPerformed

    private void menuBarraAtributosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBarraAtributosActionPerformed
        barraAtributos.setVisible(menuBarraAtributos.isSelected());
    }//GEN-LAST:event_menuBarraAtributosActionPerformed

    private void menuBarraFormasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBarraFormasActionPerformed
        barraFormas.setVisible(menuBarraFormas.isSelected());
    }//GEN-LAST:event_menuBarraFormasActionPerformed

    private void menuBarraEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBarraEstadoActionPerformed
        barraEstado.setVisible(menuBarraEstado.isSelected());
    }//GEN-LAST:event_menuBarraEstadoActionPerformed

    private void escritorioMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_escritorioMouseMoved
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi!=null)
        vi.addMouseMotionListener(new ManejadorRaton());
        
    }//GEN-LAST:event_escritorioMouseMoved

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_formMouseMoved

    private void botonRecorteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRecorteActionPerformed
           VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().setRecorte(!vi.getLienzo2D().isRecorte());
            vi.getLienzo2D().repaint();
        }
    }//GEN-LAST:event_botonRecorteActionPerformed

    private void botonVolcadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolcadoActionPerformed
          VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            vi.getLienzo2D().volcar();
            vi.getLienzo2D().repaint();
        }
        
    }//GEN-LAST:event_botonVolcadoActionPerformed

    private void menuTamanioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTamanioActionPerformed
        // TODO add your handling code here:
       
        double x =this.getLocationOnScreen().getX()+(this.getWidth()/2) ;
        double y = this.getLocationOnScreen().getY()+(this.getHeight()/2) ;
        ventanaTamanio.setLocation((int)x-ventanaTamanio.getWidth()/2,(int)y-ventanaTamanio.getHeight()/2);
        
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
        alto.setValue(Integer.valueOf(vi.getLienzo2D().getImage(true).getHeight()));
        ancho.setValue(Integer.valueOf(vi.getLienzo2D().getImage(true).getWidth()));
        
        }
        ventanaTamanio.setVisible(true);
        
    }//GEN-LAST:event_menuTamanioActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        // TODO add your handling code here:
        ventanaTamanio.dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void botonRedimensionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRedimensionarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        BufferedImage img = vi.getLienzo2D().getImage(false);
        BufferedImage imgr = new BufferedImage ((int)ancho.getValue(), (int)alto.getValue(), BufferedImage.TYPE_INT_RGB);
        imgr.getGraphics().drawImage(img, 0, 0, (int)ancho.getValue(), (int)alto.getValue(), null);
        
        vi.getLienzo2D().setImage(imgr);
        vi.getLienzo2D().repaint();
        
        
    }//GEN-LAST:event_botonRedimensionarActionPerformed

    private void botonRecortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRecortarActionPerformed
            // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        BufferedImage img = vi.getLienzo2D().getImage(false);
        BufferedImage imgr = new BufferedImage ((int)ancho.getValue(), (int)alto.getValue(), BufferedImage.TYPE_INT_RGB);
        imgr.getGraphics().drawImage(img, 0, 0, null);
        vi.getLienzo2D().setImage(imgr);
        vi.getLienzo2D().repaint();
        
    }//GEN-LAST:event_botonRecortarActionPerformed

    private void InicializarVentana(VentanaInterna vi)
    {
        barraEstado.setText("Punto");
        vi.getLienzo2D().setHerramienta("punto");
        vi.getLienzo2D().setColor(Color.BLACK);
        botonDesplegableColores.setSelectedItem(Color.BLACK);
        botonPunto.setSelected(true);
        botonAlisar.setSelected(false);
        botonTransparencia.setSelected(false);
        botonRelleno.setSelected(false);
        botonRecorte.setSelected(false);
        botonGrosor.setValue((int) 3);
        vi.getLienzo2D().setTrazo(3);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    //1) Definir la clase manejadora y sobrecargar los metodos que sean necesarios
    private class ManejadorVentanaInterna extends InternalFrameAdapter {

        public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            VentanaInterna vi = (VentanaInterna) evt.getInternalFrame();
            botonRelleno.setSelected(vi.getLienzo2D().isRelleno());
            botonTransparencia.setSelected(vi.getLienzo2D().isTransparencia());
            botonAlisar.setSelected(vi.getLienzo2D().isAlisar());
            botonRecorte.setSelected(vi.getLienzo2D().isRecorte());
            botonDesplegableColores.setSelectedItem(vi.getLienzo2D().getColor());
            botonGrosor.setValue(vi.getLienzo2D().getTrazo());
            switch (vi.getLienzo2D().getHerramienta()) {
                case "punto":
                    botonPunto.setSelected(true);
                    barraEstado.setText("Punto");
                    break;
                case "linea":
                    botonLinea.setSelected(true);
                    barraEstado.setText("Linea");
                    break;
                case "rectangulo":
                    botonRectangulo.setSelected(true);
                    barraEstado.setText("Rectangulo");
                    break;
                case "elipse":
                    botonElipse.setSelected(true);
                    barraEstado.setText("Elipse");
                    break;
                case "seleccionar":
                    botonSeleccionar.setSelected(true);
                    barraEstado.setText("Seleccionar");
                    break;
            }

        }
        
    }
    
  private class ManejadorRaton extends MouseMotionAdapter {
      public void mouseMoved(java.awt.event.MouseEvent evt) {
          Point p = new Point (evt.getPoint());
          barraCoordenadas.setText("x: "+p.getX()+", y: "+p.getY());
      }
  }
   
 /* 
  private class ManejadorVentanaTamanio extends   {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
          if ( )
          {
              
          }
      }
  }
   */     
          
          
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GrupoBotonesHerramientas;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JSpinner alto;
    private javax.swing.JSpinner ancho;
    private javax.swing.JToolBar barraAtributos;
    private javax.swing.JLabel barraCoordenadas;
    private javax.swing.JLabel barraEstado;
    private javax.swing.JToolBar barraFormas;
    private javax.swing.JButton botonAbrir;
    private javax.swing.JToggleButton botonAlisar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JComboBox<Color> botonDesplegableColores;
    private javax.swing.JToggleButton botonElipse;
    private javax.swing.JSpinner botonGrosor;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JToggleButton botonLinea;
    private javax.swing.JButton botonNuevo;
    private javax.swing.JToggleButton botonPunto;
    private javax.swing.JButton botonRecortar;
    private javax.swing.JToggleButton botonRecorte;
    private javax.swing.JToggleButton botonRectangulo;
    private javax.swing.JButton botonRedimensionar;
    private javax.swing.JToggleButton botonRelleno;
    private javax.swing.JToggleButton botonSeleccionar;
    private javax.swing.JToggleButton botonTransparencia;
    private javax.swing.JButton botonVolcado;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JCheckBoxMenuItem menuBarraAtributos;
    private javax.swing.JCheckBoxMenuItem menuBarraEstado;
    private javax.swing.JCheckBoxMenuItem menuBarraFormas;
    private javax.swing.JMenu menuEdicion;
    private javax.swing.JMenuItem menuGuardar;
    private javax.swing.JMenuItem menuNuevo;
    private javax.swing.JMenuItem menuTamanio;
    private javax.swing.JPanel panelHerramientas;
    private javax.swing.JDialog ventanaTamanio;
    // End of variables declaration//GEN-END:variables
}
